trigger:
- main

pool:
  name: 'Default'  # Ensure this points to a specific pool or you can choose a different pool
  demands:
    - agent.os -equals Linux  # This ensures the agent uses a Linux machine
    - parallelism==1  # Make sure only one job runs at a time (to avoid parallel execution)

jobs:
  - job: Build_Frontend
    displayName: 'Build Angular Frontend'
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '20.x'
        displayName: 'Install Node.js'

      - script: |
          cd emp_frontend
          npm install -g @angular/cli
          npm install
          ng build --prod
        displayName: 'npm install and build Angular'

  - job: Build_Backend
    displayName: 'Build Spring Boot Backend'
    dependsOn: Build_Frontend  # This ensures the backend job waits for frontend to complete
    steps:
      - task: Maven@3
        inputs:
          mavenPomFile: 'emp_backend/pom.xml'
          goals: 'clean install'
          options: '-DskipTests=true'
        displayName: 'Build Spring Boot Application'

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'backend'
          publishLocation: 'Container'
        displayName: 'Publish Backend Build Artifacts'
